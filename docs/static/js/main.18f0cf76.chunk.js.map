{"version":3,"sources":["components/AddCategory.jsx","helpers/fetchGifs.js","components/GifCard.jsx","components/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","className","onSubmit","e","preventDefault","trim","length","category","type","value","onChange","target","fetchGifs","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifCard","src","alt","GifGrid","loading","setData","useEffect","then","useFetchGifs","GifExpertApp","defaultValue","categories","ReactDOM","render","document","getElementById"],"mappings":"wNAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBACIC,UAAU,2BACVC,SAXa,SAACC,GAClBA,EAAEC,iBACCL,EAAWM,OAAOC,OAAS,IAC1BT,GAAe,SAAAU,GAAQ,OAAKR,GAAL,mBAAoBQ,OAC3CP,EAAc,MAKlB,SAII,uBAAOQ,KAAK,OAAOC,MAAOV,EAAYW,SAjBpB,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACxBX,EAAcW,EAAOF,a,uBCRhBG,EAAS,uCAAG,WAAOL,GAAP,uBAAAM,EAAA,6DACfC,EADe,iDACiCC,UAAUR,GAD3C,+DAEFS,MAAMF,GAFJ,cAEfG,EAFe,gBAGEA,EAAKC,OAHP,uBAGbC,EAHa,EAGbA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATrB,kBAcdM,GAdc,4CAAH,sDCETO,EAAU,SAAC,GAAkB,IAAjBb,EAAgB,EAAhBA,IAAKU,EAAW,EAAXA,MAC1B,OACI,sBAAKvB,UAAU,OAAf,UACI,qBAAKA,UAAU,YAAf,SACI,qBAAK2B,IAAKd,EAAKe,IAAKL,MAExB,4BAAIA,QCJHM,EAAU,SAAC,GAAkB,IAAhBvB,EAAe,EAAfA,SAEtB,ECHwB,SAACA,GAEzB,MAAwBT,mBAAS,CAC7BqB,KAAM,GACNY,SAAS,IAFb,mBAAOZ,EAAP,KAAaa,EAAb,KAkBA,OAbAC,qBAAU,WAENrB,EAAUL,GACL2B,MAAK,SAAAjB,GACFe,EAAQ,CACJb,KAAK,YAAKF,GACVc,SAAS,SAKtB,CAACxB,IAEGY,EDjBmBgB,CAAa5B,GAA/BY,EAAR,EAAQA,KAAMY,EAAd,EAAcA,QAEd,OACI,qCACI,6BAAKxB,IAEL,sBAAKN,UAAU,YAAf,UAEK8B,GAAW,4CAERZ,EAAKE,KAAI,SAAAC,GAAG,OAER,cAAC,EAAD,CAEIR,IAAKQ,EAAIR,IACTU,MAAOF,EAAIE,OAFNF,EAAIC,cEZxBa,G,MAAe,SAAC,GAA2B,IAAD,IAAxBC,oBAAwB,MAAT,GAAS,EAGnD,EAAoCvC,mBAASuC,GAA7C,mBAAOC,EAAP,KAAmBzC,EAAnB,KAGA,OACI,sBAAKI,UAAU,kBAAf,UACI,oBAAIA,UAAU,cAAd,0BACA,cAAC,EAAD,CAAaJ,cAAeA,IAE5B,oBAAII,UAAU,UAAd,SAEQqC,EAAWjB,KAAK,SAAAd,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAUA,GADLA,a,MCdjCgC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.18f0cf76.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n    \r\n    const handleInputCahnge = ({target}) => {\r\n        setInputValue(target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if(inputValue.trim().length > 2) {\r\n            setCategories( category => [inputValue, ...category])\r\n            setInputValue('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form \r\n            className='gif__aÃ±adir_categoria'\r\n            onSubmit={handleSubmit}\r\n        >\r\n            <input type=\"text\" value={inputValue} onChange={handleInputCahnge}/>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const fetchGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=A8xMXqzieIHmtO3BjGLAtf1daSSDAv8K`;\r\n    const resp = await fetch(url)\r\n    const { data } = await resp.json()\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n\r\n        }\r\n    })\r\n\r\n    return gifs\r\n}","import PropTypes from 'prop-types'\r\n\r\nexport const GifCard = ({url, title}) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card__img\">\r\n                <img src={url} alt={title} />\r\n            </div>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nGifCard.propTypes = {\r\n    url: PropTypes.string,\r\n    title: PropTypes.string\r\n}","import PropTypes from 'prop-types'\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\"\r\nimport { GifCard } from \"./GifCard\"\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data, loading } = useFetchGifs(category)\r\n    \r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            <div className=\"card-grid\">\r\n                {/* Aqui mapeo los items */}\r\n                {loading && <h4>Loading...</h4>}\r\n                {\r\n                    data.map(img => (\r\n\r\n                        <GifCard\r\n                            key={img.id}\r\n                            url={img.url}\r\n                            title={img.title}\r\n                        />\r\n\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nGifGrid.propTypes = {\r\n    category: PropTypes.string\r\n}","import { useEffect, useState } from \"react\"\r\nimport { fetchGifs } from \"../helpers/fetchGifs\"\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [data, setData] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        fetchGifs(category)\r\n            .then(resp => {\r\n                setData({\r\n                    data: [...resp],\r\n                    loading: false\r\n                })\r\n                \r\n            })\r\n\r\n    }, [category])\r\n\r\n    return data\r\n}","import { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nimport './styles/styles.css'\r\n\r\n\r\nexport const GifExpertApp = ({ defaultValue = [] }) => {\r\n\r\n    // const [categories, setCategories] = useState(['one punch man'])\r\n    const [categories, setCategories] = useState(defaultValue)\r\n\r\n\r\n    return (\r\n        <div className='gif__contenedor'>\r\n            <h3 className='gif__titulo'>GifExpertApp</h3>\r\n            <AddCategory setCategories={setCategories} />\r\n            {/* Aqui mapeo el conjunto de items con el grid */}\r\n            <ol className='gif__ol'>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\n\nimport './styles/normalize.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}